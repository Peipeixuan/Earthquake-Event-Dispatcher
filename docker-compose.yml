version: "3.8"

services:
  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
    env_file:
      - .env
    networks:
      - app_network
    depends_on:
      - prometheus
      - mysql

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app_network
    depends_on:
      - backend
    env_file:
      - .env

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_network

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - app_network
    env_file:
      - .env

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      # MYSQL_USER: ${DB_USER}
      # MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/mysql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
    ports:
      - "3306:3306"
    networks:
      - app_network


networks:
  app_network:
    driver: bridge

volumes:
  mysql_data: