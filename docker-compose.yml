
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app_network
    depends_on:
      - frontend
      - backend
      - prometheus
      - grafana
      - data-ingestion
  
  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_exporter
    ports:
      - "9113:9113"
    networks:
      - app_network
    depends_on:
      - nginx
    environment:
      - NGINX_STATUS_URL=http://nginx:80/nginx_status  # Nginx status URL

  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
    env_file:
      - .env
    networks:
      - app_network
    depends_on:
      - prometheus
      - mysql
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    networks:
      - app_network
    depends_on:
      - backend
    env_file:
      - .env

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - /tmp/prometheus:/prometheus
    ports:
      - "9090:9090"
    networks:
      - app_network

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    - grafana-storage:/var/lib/grafana
    networks:
      - app_network
    env_file:
      - .env

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/mysql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - ./backend/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    networks:
      - app_network

  data-ingestion:
    build:
      context: ./data-ingestion
    container_name: data-ingestion
    env_file:
      - .env
    networks:
      - app_network
    depends_on:
      - mysql

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
  node_modules:
  grafana-storage: {}